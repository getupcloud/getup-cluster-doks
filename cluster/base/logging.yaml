---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: flux-system
spec:
  chart:
    spec:
      chart: loki
      sourceRef:
        kind: HelmRepository
        name: grafana
      version: 5.42.2
  install:
    createNamespace: true
    disableWait: false
    remediation:
      retries: -1
  upgrade:
    disableWait: false
    remediation:
      retries: -1
  interval: 10m
  timeout: 30m
  releaseName: loki
  storageNamespace: logging
  targetNamespace: logging
  values:
    singleBinary:
      replicas: 1
      persistence:
        enableStatefulSetAutoDeletePVC: false
        size: 10Gi

#    write:
#      replicas: 3
#
#    read:
#      replicas: 3

    loki:
      auth_enabled: false

      storage:
        type: s3
#        type: filesystem

      commonConfig:
        replication_factor: 1
        ring:
          kvstore:
            store: inmemory
            #store: memberlist

      limits_config:
        reject_old_samples: true
        reject_old_samples_max_age: 1w
        max_entries_limit_per_query: 20000
        retention_period: 720h
        split_queries_by_interval: 15m
        max_query_parallelism: 16

      #chunk_store_config:

      #distributor:
      #  ring:
      #    kvstore:
      #      store: inmemory

      #index_gateway:
      #  mode: simple
      #  ring:
      #    kvstore:
      #      store: inmemory

      ingester:
        chunk_block_size: 524288
        chunk_encoding: lz4
        max_chunk_age: 2h
        chunk_idle_period: 1h
        chunk_retain_period: 15s
        wal:
          replay_memory_ceiling: 1G
        #lifecycler:
        #  ring:
        #    kvstore:
        #      store: inmemory

      # table manager is not used anymoree
      #tableManager:
      #  enabled: true
      #  retention_deletes_enabled: true
      #  retention_period: 720h

      compactor:
        shared_store: s3
        #working_directory: /var/loki/boltdb-shipper-compactor
        #compaction_interval: 5m
        retention_enabled: true
        retention_delete_delay: 2h
        #retention_delete_worker_count: 150
        #compactor_ring:
        #  kvstore:
        #    store: inmemory

      frontend:
        max_outstanding_per_tenant: 1024

      query_scheduler:
        max_outstanding_requests_per_tenant: 1024

      query_range:
        parallelise_shardable_queries: true

    monitoring:
      lokiCanary:
        enabled: false

    test:
      #prometheusAddress: http://monitoring-kube-prometheus-prometheus.monitoring.cluster.local:9090
      enabled: false

    #alerting_groups:
    #- name: Missing Log Lines for 30m
    #  rules:
    #  - alert: NoLogLinesForTooLong
    #    expr: sum(count_over_time({namespace="logging"}[30s])) == 0
    #    for: 30m

    #ingress:
    #  enabled: false

    #resources:
    #  limits:
    #    cpu: 1
    #    memory: 4Gi
    #  requests:
    #    cpu: 100m
    #    memory: 1Gi

    #priorityClassName: high-priority

    #serviceMonitor:
    #  enabled: true
    #  interval: 60s
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: promtail
  namespace: flux-system
spec:
  chart:
    spec:
      chart: promtail
      sourceRef:
        kind: HelmRepository
        name: grafana
      version: "~> 6.15"
  dependsOn:
  - name: loki
  install:
    createNamespace: true
    disableWait: false
    remediation:
      retries: -1
  upgrade:
    disableWait: false
    remediation:
      retries: -1
  interval: 10m
  releaseName: promtail
  storageNamespace: logging
  targetNamespace: logging
  values:
    configmap:
      enabled: true

    config:
      #clients:
      #- url: http://loki-gateway:80/loki/api/v1/push

      snippets:
        extraRelabelConfigs:
        # keep all kubernetes labels
        #- action: labelmap
        #  regex: __meta_kubernetes_pod_label_(.+)
        # remove hashing labels in order to decrease cardinality
        - action: labeldrop
          regex: __meta_kubernetes_pod_label_.*_hash

    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 64Mi

    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: "25%"

    serviceMonitor:
      enabled: true
      interval: 60s

    #volumes:
    #- name: containers
    #  hostPath:
    #    path: /var/lib/containers
    #- name: docker
    #  hostPath:
    #    path: /var/lib/docker/containers
    #- name: pods
    #  hostPath:
    #    path: /var/log/pods
    ##
    ## OCI OKE
    ##
    ##- hostPath:
    #    path: /u01
    #  name: u01
    #
    #volumeMounts:
    #- name: containers
    #  mountPath: /var/lib/containers
    #  readOnly: true
    #- name: docker
    #  mountPath: /var/lib/docker/containers
    #  readOnly: true
    #- name: pods
    #  mountPath: /var/log/pods
    #  readOnly: true
